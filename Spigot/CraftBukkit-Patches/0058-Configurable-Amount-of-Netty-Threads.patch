From 15c185d1e7b721f1b6ee9ae1ad34da1eb43b6b4d Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Fri, 13 Dec 2013 11:58:58 +1100
Subject: [PATCH] Configurable Amount of Netty Threads

This brings back the option that the Spigot version of netty saw. By default Netty will try and use cores*2 threads, however if running multiple servers on the same machine, this can be too many threads. Additionally some people have 16 core servers. If 32 Netty threads are allowed in this setup, then the lock contention, and thus blocking between threads becomes much greater, leading to decreased performance.

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 2fa1626..abef561 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -61,7 +61,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
     private final List o = Lists.newArrayList();
     private final ICommandHandler p;
     public final MethodProfiler methodProfiler = new MethodProfiler();
-    private final ServerConnection q;
+    private ServerConnection q; // Spigot
     private final ServerPing r = new ServerPing();
     private final Random s = new Random();
     private String serverIp;
@@ -123,7 +123,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
         this.d = proxy;
         MinecraftServer.k = this;
         // this.universe = file; // CraftBukkit
-        this.q = new ServerConnection(this);
+        // this.q = new ServerConnection(this); // Spigot
         this.Z = new UserCache(this, file1);
         this.p = this.h();
         // this.convertable = new WorldLoaderServer(file); // CraftBukkit - moved to DedicatedServer.init
@@ -1329,7 +1329,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
     }
     // Spigot End
     public ServerConnection ao() {
-        return this.q;
+        return this.q == null ? this.q = new ServerConnection(this) : this.q; // Spigot
     }
 
     public boolean aq() {
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 47ab82f..865a17f 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -220,4 +220,11 @@ public class SpigotConfig
         }
         bungee = getBoolean( "settings.bungeecord", false );
     }
+
+    private static void nettyThreads()
+    {
+        int count = getInt( "settings.netty-threads", 4 );
+        System.setProperty( "io.netty.eventLoopThreads", Integer.toString( count ) );
+        Bukkit.getLogger().log( Level.INFO, "Using {0} threads for Netty based IO", count );
+    }
 }
-- 
2.1.0

